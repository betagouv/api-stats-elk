#!/usr/bin/env node
// vi: ft=javascript

var nconf = require('../api/lib/utils/nconf')
var Server = require('../api/server')
var blocked = require('blocked')
var throng = require('throng')
const logging = require('../api/lib/logging')

var NB_WORKERS = nconf.get('nbWorkers')

throng(NB_WORKERS, function (id) {
  const logger = logging.createLogger(nconf, id)

  blocked((ms) => {
    logger.debug('BLOCKED for %dms!', ms)
  })

  var server = new Server({
    port: nconf.get('PORT'),
    logger: logger,
    nconf: nconf,
    raven: {
      activate: nconf.get('raven:activate'),
      dsn: nconf.get('raven:dsn')
    },
    es: {
      host: nconf.get('es:host'),
      index: nconf.get('es:index')
    },
    ban: {
      baseUrl: nconf.get('ban:baseUrl')
    }
  })

  server.start(function (err) {
    if (err) {
      logger.fatal({error: err}, 'cannot recover from previous errors. shutting down now. error was', err.stack)
      setTimeout(process.exit.bind(null, 99), 10)
    }
    logger.info('Sever successfully started.')
  })
})
